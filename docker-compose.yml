
services:
  frontend:
    env_file:
      - .env
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    volumes:
      - ./frontend/src:/code/src/
      - ./frontend/public:/code/public/
    environment:
      - PUBLIC_URL=/static/
  
  astro:
    build:
      context: ./astro/
      dockerfile: Dockerfile
    volumes:
      - ./astro/src:/app/src
      - ./astro/public:/app/public
    command: npm run ${ENV:-dev}
    env_file:
      - .env
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true

  backend:
    env_file:
      - .env
    build:
      context: ./backend/
      dockerfile: Dockerfile
    volumes:
      - ./backend/backend:/code/backend/
      - ./backend:/code/
    depends_on:
      - db

  proxy:
    image: traefik:v3.4
    ports:
      - ${HTTP_PORT:-80}:80
      - ${HTTPS_PORT:-443}:443
    volumes:
      - ./traefik.toml:/etc/traefik/traefik.toml:ro
      - ./dynamic_conf.toml:/etc/traefik/dynamic_conf.toml:ro
      - ./acme.json:/acme.json
    env_file:
      - .env

  mail:
    image: schickling/mailcatcher
    ports:
      - 1080:1080
      - 1025:1025

  stripe:
    env_file:
      - .env
    image: stripe/stripe-cli:v1.7.4
    command: ["listen", "-H", "x-djstripe-webhook-secret: ${STRIPE_WEBHOOK_SECRET}", "--forward-to", "http://backend:8000/stripe/webhook/"]
    depends_on:
      - backend
      - proxy
    environment:
      - STRIPE_API_KEY=${STRIPE_API_KEY_TEST}

  db:
    image: postgres:17
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env

volumes:
  postgres_data:
